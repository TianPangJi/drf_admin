# Generated by Django 2.2.13 on 2021-03-06 06:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='登录账户')),
                ('password', models.CharField(max_length=64, verbose_name='登录密码')),
                ('port', models.PositiveIntegerField(verbose_name='登录端口号')),
            ],
            options={
                'verbose_name': '服务器登录账户',
                'verbose_name_plural': '服务器登录账户',
                'db_table': 'cmdb_accounts',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='资产名称')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='资产序列号')),
                ('asset_type', models.CharField(choices=[('server', '服务器'), ('network', '网络设备'), ('storage', '存储设备'), ('security', '安全设备')], default='server', max_length=64, verbose_name='资产类型')),
                ('asset_status', models.SmallIntegerField(choices=[(0, '在线'), (1, '下线'), (2, '未知'), (3, '故障'), (4, '备用')], default=0, verbose_name='设备状态')),
                ('manage_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP')),
                ('expire_day', models.DateField(blank=True, null=True, verbose_name='过保日期')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '资产总表',
                'verbose_name_plural': '资产总表',
                'db_table': 'cmdb_assets',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='机房名称')),
                ('memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '机房',
                'verbose_name_plural': '机房',
                'db_table': 'cmdb_idc',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='StorageDevices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.SmallIntegerField(choices=[(0, '磁盘阵列'), (1, '网络存储器'), (2, '磁带库'), (3, '磁带机')], default=0, verbose_name='存储设备类型')),
                ('model', models.CharField(default='未知型号', max_length=128, verbose_name='存储设备型号')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage', to='cmdb.Assets')),
            ],
            options={
                'verbose_name': '存储设备',
                'verbose_name_plural': '存储设备',
                'db_table': 'cmdb_storagedevices',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Servers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_type', models.CharField(choices=[('pm', '物理机'), ('vm', '虚拟机')], default=0, max_length=16, verbose_name='服务器类型')),
                ('server_system_type', models.SmallIntegerField(choices=[(0, 'Unix'), (1, 'Linux'), (2, 'Windows'), (3, 'Netware')], default=0, verbose_name='服务器系统类型')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='服务器型号')),
                ('use', models.CharField(blank=True, max_length=128, null=True, verbose_name='用途')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='server', to='cmdb.Assets')),
            ],
            options={
                'verbose_name': '服务器',
                'verbose_name_plural': '服务器',
                'db_table': 'cmdb_servers',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='SecurityDevices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.SmallIntegerField(choices=[(0, '防火墙'), (1, '入侵检测设备'), (2, '互联网网关'), (3, '运维审计系统')], default=0, verbose_name='安全设备类型')),
                ('model', models.CharField(default='未知型号', max_length=128, verbose_name='安全设备型号')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='security', to='cmdb.Assets')),
            ],
            options={
                'verbose_name': '安全设备',
                'verbose_name_plural': '安全设备',
                'db_table': 'cmdb_securitydevices',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='NetworkDevices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.SmallIntegerField(choices=[(0, '路由器'), (1, '交换机'), (2, '负载均衡'), (3, 'VPN设备')], default=0, verbose_name='网络设备类型')),
                ('vlan_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='VLanIP')),
                ('intranet_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='内网IP')),
                ('model', models.CharField(default='未知型号', max_length=128, verbose_name='网络设备型号')),
                ('firmware', models.CharField(blank=True, max_length=128, null=True, verbose_name='设备固件版本')),
                ('port_num', models.SmallIntegerField(blank=True, null=True, verbose_name='端口个数')),
                ('device_detail', models.TextField(blank=True, null=True, verbose_name='详细配置')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='network', to='cmdb.Assets')),
            ],
            options={
                'verbose_name': '网络设备',
                'verbose_name_plural': '网络设备',
                'db_table': 'cmdb_networkdevices',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Cabinets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='机柜名称')),
                ('memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
                ('idc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.IDC', verbose_name='所在机房')),
            ],
            options={
                'verbose_name': '机柜',
                'verbose_name_plural': '机柜',
                'db_table': 'cmdb_cabinets',
                'ordering': ['-id'],
            },
        ),
    ]
